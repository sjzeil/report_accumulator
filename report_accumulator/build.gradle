/*
 * Report Accumulator build file
 * Steven J Zeil, Old Dominion Univ.
 */

 
buildscript {
	repositories {
		jcenter()
		maven {
           url "https://plugins.gradle.org/m2/"  // for spotbugs
        }
	}
	dependencies {
		classpath 'org.hidetake:gradle-ssh-plugin:2.7.0+'
		// classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
        classpath "gradle.plugin.com.github.spotbugs:gradlePlugin:1.6.0"   
	}
}


apply plugin: 'groovy'
apply plugin: 'java'
//apply plugin: 'maven-publish'
apply plugin: 'ivy-publish'
apply plugin: 'project-report'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'com.github.spotbugs'
apply plugin: 'pmd'
apply plugin: 'jacoco'

//apply plugin: 'com.jfrog.bintray'


group = 'edu.odu.cs.zeil'
version = '1.2'
// Credentials are loaded from ~/.gradle/gradle.properties
if(project.hasProperty("ivyRepoUser")){
	ext.ivyRepoUser = "$ivyRepoUser";
} else {
	ext.ivyRepoUser = "user";
}
if(project.hasProperty("ivyRepoPass")){
	ext.ivyRepoPass = "$ivyRepoPass";
} else {
	ext.ivyRepoPass = "password";
}



publishing {
    publications {
        ivyJava(IvyPublication) {
            organisation 'edu.odu.cs.zeil'
            module project.name
            revision '1.2'
            descriptor.status = 'milestone'
            descriptor.branch = 'master'

            from components.java
        }
        /*
		mavenJava(MavenPublication) {
            groupId 'edu.odu.cs.zeil'
            artifactId 'report_accumulator'
            version '1.2'
			
			from components.java
		}
		*/
    }
    repositories {
		ivy {
            name 'ivyRepo'
            url 'sftp://linux.cs.odu.edu:22/home/zeil/secure_html/ivyrepo'
            // Readable via https://www.cs.odu.edu/~zeil/ivyrepo    
            credentials {
                // Credentials are loaded from ~/.gradle/gradle.properties
                username project.ivyRepoUser
                password project.ivyRepoPass
            }
        }
        maven {
            name 'mavenRepo'
            url 'sftp://linux.cs.odu.edu:22/home/zeil/secure_html/mavenrepo'
            // Readable via https://www.cs.odu.edu/~zeil/ivyrepo    
            credentials {
                // Credentials are loaded from ~/.gradle/gradle.properties
                username "$ivyRepoUser"
                password "$ivyRepoPass"
            }
        }
    }           
}


jar {
	manifest {
		attributes 'Implementation-Title': 'Report Accumulator',
			'Implementation-Version': '1.2'
	}
	// from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}


/*
bintray {
   // Credentials are loaded from ~/.gradle/gradle.properties
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : 'fakeuser'
	key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : 'fakeKey'
	publications = ['mavenJava']
	pkg {
		repo = "maven"
		name = 'report_accumulator'
		
		version {
			name = '1.2'
			desc = 'Gradle/Java Report Statistics Accumulator v1.2'
			released  = new Date()
			vcsTag = '1.2'
		}
	}
}
*/

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.hidetake:gradle-ssh-plugin:2.7.0+'
    testCompile 'junit:junit:4.12'
}





checkstyle {
    ignoreFailures = true
    showViolations = false    
}

findbugsMain {
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'high'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugsMain {
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'medium'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}



tasks.withType(Checkstyle) {
  reports {
    html.destination project.file("build/reports/checkstyle/main.html")
  }
}

pmd {
    ignoreFailures = true
    consoleOutput = false
}

test.ignoreFailures=true
checkstyleTest.enabled = false
findbugsTest.enabled = false
spotbugsTest.enabled = false
pmdTest.enabled = false
check.dependsOn jacocoTestReport
check.dependsOn htmlDependencyReport

task copyWebPages (type: Copy) {
    from 'src/main/html'
    into 'build/reports'
}

task copyDocs (type: Copy) {
    from 'build/docs'
    into 'build/reports/docs'
    dependsOn 'javadoc'
}

task reports (dependsOn: ['htmlDependencyReport', 'javadoc', 'check', 'copyWebPages', 'copyDocs']) {
    description 'Generate all reports for this project'
}


/*
   Report deployment is done via the accompanying demo project, as an example
   of how to use this plug-in. 
*/